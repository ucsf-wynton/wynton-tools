#! /usr/bin/env bash
#' Wynton Disk Quota and Usage
#'
#' Usage:
#'  wynton-quota [options]
#'
#' Flags:
#'  --help           Display this help
#'  --version        Display version
#'
#' Options:
#'  --user=<user>    List HOME, global scratch, and group quotas
#'                   for a user (default: ${USER}).
#'                   If `"*"`, then all users are considered
#'  --group=<group>  List quota for a group.
#'                   If `"*"`, then all groups are considered
#'
#' Examples:
#'  wynton quota
#'  wynton quota --user=alice
#'  wynton quota --group=boblab
#'  wynton quota --user="*"
#'  wynton quota --group="*"
#'
#' License: See 'wynton --help'
call="$0 $*"

this="${BASH_SOURCE%/}"
[[ -L "${this}" ]] && this=$(readlink "${this}")

## Import bash utility functions
incl="$(dirname "${this}")/incl"

# shellcheck source=incl/asserts.sh
source "${incl}/asserts.sh"
# shellcheck source=incl/cli.sh
source "${incl}/cli.sh"
# shellcheck source=incl/conditions.sh
source "${incl}/conditions.sh"
# shellcheck source=incl/files.sh
source "${incl}/files.sh"
# shellcheck source=incl/output.sh
source "${incl}/output.sh"
# shellcheck source=incl/system.sh
source "${incl}/system.sh"


# -------------------------------------------------------------------------
# SPECIFIC
# -------------------------------------------------------------------------


# -------------------------------------------------------------------------
# MAIN
# -------------------------------------------------------------------------
## Actions
action=quota-user

## Options
debug=false
user=${USER}
group=

# Parse command-line options
while [[ $# -gt 0 ]]; do
    if test "$1" == "--help"; then
        action=help
    elif test "$1" == "--version"; then
        action=version
    elif test "$1" == "--debug"; then
        debug=true

    ## Options (--key=value):
    elif [[ "$1" =~ ^--.*=.*$ ]]; then
        key=${1//--}
        key=${key//=*}
        value=${1//--[[:alpha:]]*=}
        mdebug "Key-value option '$1' parsed to key='${key}', value='${value}'"
        if [[ -z ${value} ]]; then
            error "Option '--${key}' must not be empty"
        fi
        if [[ "${key}" == "user" ]]; then
            user=${value}
            action=quota-user
        elif [[ "${key}" == "group" ]]; then
            user=${value}
            action=quota-group
        else
            error "Unknown option: $1"
        fi
    else
        error "Unknown option: $1"
    fi
    shift
done


if ${debug}; then
    mdebug "call: ${call}"
    mdebug "action: ${action}"
    mdebug "user: '${user}'"
    mdebug "group: '${group}'"
fi

if [[ ${action} == "version" ]]; then
    version
    exit 0
elif [[ ${action} == "help" ]]; then
    help ""
    exit 0
fi

if [[ ${action} == "quota-user" ]]; then
    # Report on all users?
    if [[ ${user} == "*" ]]; then
        echo "# Disk Usage and Quota"
        echo

        # Find all activate or interactive Wynton users in LDAP
        mapfile -t uids < <(ldapsearch -LLL -x -b "ou=Groups,dc=cgl,dc=ucsf,dc=edu" "(| (wyntonAccess=TRUE) (wyntonAccess=FALSE) )" "uidNumber" | grep -E "^uidNumber:" | sed -E 's/^uidNumber: *//')
        echo "Number of users: ${#uids[@]}"
        echo
        
        echo "## Home Disk Quota"
        echo
        for uid in "${uids[@]}"; do
            beegfs-ctl --getquota --storagepoolid=11 --uid "${uid}" | sed -n '4p'
        done
        
        echo "## Global Scratch Disk Quota"
        echo
        for uid in "${uids[@]}"; do
            beegfs-ctl --getquota --storagepoolid=10 --uid "${uid}" | sed -n '4p'
        done
    else
        ## Assert that user exists
        id --user "${user}" &> /dev/null || error "No such user: ${user}"
        
        uid=$(id --user "${user}")
        gid=$(id --group "${user}")
        group=$(id --group --name "${user}")
        if [[ ${user} == "${USER}" ]]; then
            home=${HOME}
        else
            home=$(getent passwd "${user}" | cut -d: -f6)
        fi

        echo "# Disk Usage and Quota"
        echo

        echo "* User : ${user} (uid=${uid})"
        echo "* Group: ${group} (gid=${gid})"
        echo "* HOME : ${home}"
        echo
        echo "## Home Disk Quota"
        echo
        beegfs-ctl --getquota --storagepoolid=11 --uid "${user}"
        echo
        echo "NOTE: Because /wynton/home storage is mirrored, the disk usage ('used') and the available quota ('hard') are reported at twice of what you would expect for a non-mirrored storage. That is, 'hard' quota of 1000 GiB should be interpreted as 500 GiB worth of storage space. Moreover, the BeeGFS storage is also compressed, meaning a 1.0 GiB file is likely to consume less that 1.0 GiB of storage space - how much a file is compressed varies greatly with file format."
    
        echo
        echo "## Global Scratch Disk Quota"
        echo
        beegfs-ctl --getquota --storagepoolid=10 --uid "${user}"
        echo
        echo "NOTE: Files on /wynton/scratch are automatically deleted after 14 days."
        echo
        
        echo "## Group Disk Quota"
        echo
        beegfs-ctl --getquota --storagepoolid=12 --gid "${gid}"
        echo
    fi
elif [[ ${action} == "quota-group" ]]; then
    # Report on all groups?
    if [[ ${group} == "*" ]]; then
        echo "## Group Disk Quotas"
        echo
        
        # Find all groups in LDAP
        mapfile -t gids < <(ldapsearch -LLL -x -b "ou=Groups,dc=cgl,dc=ucsf,dc=edu" "gidNumber" | grep -E "^gidNumber:" | sed -E 's/^gidNumber: *//')
        echo "Number of groups: ${#gids[@]}"
        echo
        for gid in "${gids[@]}"; do
            beegfs-ctl --getquota --storagepoolid=12 --gid "${gid}" | sed -n '4p'
        done
    else
        ## Assert that user exists
        gid=$(id --group --name "${group}" &> /dev/null) || error "No such group: ${group}"

        echo "# Disk Usage and Quota"
        echo
        echo "* Group: ${group} (gid=${gid})"
        echo
        echo "## Group Disk Quota"
        echo
        beegfs-ctl --getquota --storagepoolid=12 --gid "${gid}"
    fi
fi
