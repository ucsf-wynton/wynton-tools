#! /usr/bin/env bash
#' Wynton HPC Status
#'
#' Usage:
#'  wynton-status <command> [options]
#'
#' Commands:
#'  load             Average cluster load
#'
#' Flags:
#'  --help           Display this help
#'  --version        Display version
#'
#' Version: 0.0.8
#' Copyright: Henrik Bengtsson (2019)
#' License: GPL (>= 2.1) [https://www.gnu.org/licenses/gpl.html]
call="$0 $*"

this="${BASH_SOURCE%/}"
[[ -L "${this}" ]] && this=$(readlink "${this}")

## Import bash utility functions
incl="$(dirname "${this}")/incl"

# shellcheck source=incl/asserts.sh
source "${incl}/asserts.sh"
# shellcheck source=incl/cli.sh
source "${incl}/cli.sh"
# shellcheck source=incl/conditions.sh
source "${incl}/conditions.sh"
# shellcheck source=incl/files.sh
source "${incl}/files.sh"
# shellcheck source=incl/output.sh
source "${incl}/output.sh"
# shellcheck source=incl/system.sh
source "${incl}/system.sh"


# -------------------------------------------------------------------------
# SPECIFIC
# -------------------------------------------------------------------------


# -------------------------------------------------------------------------
# MAIN
# -------------------------------------------------------------------------
## Actions
action=load

## Options
debug=false
verbose=false


# Parse command-line options
while [[ $# -gt 0 ]]; do
    if test "$1" == "--help"; then
        action=help
    elif test "$1" == "--version"; then
        action=version
    elif test "$1" == "--debug"; then
        debug=true
    elif test "$1" == "--verbose"; then
        verbose=true
    else
        extras="$extras $1"
    fi
    shift
done

if $debug; then
    mdebug "call: $call"
    mdebug "action: $action"
    mdebug "verbose: $verbose"
fi

if [[ $action == "version" ]]; then
    version
    exit 0
elif [[ $action == "help" ]]; then
    help ""
    exit 0
fi

if [[ $action == "load" ]]; then
    echo "# Wynton HPC Status Overview"
    echo
    echo "## System Information"
    printf "Operating system: "; cat /etc/centos-release
    printf "File system: BeeGFS "; beegfs-ctl | grep -E "^Version: " | sed 's/.* //g'
    printf "Job scheduler: "; 2>&1 qstat --help | head -1
    echo
    echo "## Users and Groups"
    printf "Number of users: "; qconf -suserl | wc -l
    printf "Number of projects (contributing members): "; qconf -sprjl | wc -l
    echo
    echo "## Job Scheduler"
    qhost | awk '{ cores+=$5; load+=$7; } END { printf "Average load: %.2f%%\nTotal load: %.2f\nNumber of cores: %d\n", 100*load/cores, load, cores }'
fi
