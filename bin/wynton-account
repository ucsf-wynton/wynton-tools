#! /usr/bin/env bash
#' Wynton Account Validation
#'
#' Usage:
#'  wynton-account [options]
#'
#' Options:
#'  --user USER      Query another user (default: $USER)
#'  --help           Display this help
#'  --version        Display version
#'
#' Examples:
#'  wynton account
#'  wynton account --user alice
#'
#' Version: 0.0.1
#' Copyright: Henrik Bengtsson (2024)
#' License: GPL (>= 2.1) [https://www.gnu.org/licenses/gpl.html]
call="$0 $*"

this="${BASH_SOURCE%/}"
[[ -L "${this}" ]] && this=$(readlink "${this}")

## Import bash utility functions
incl="$(dirname "${this}")/incl"

# shellcheck source=incl/asserts.sh
source "${incl}/asserts.sh"
# shellcheck source=incl/cli.sh
source "${incl}/cli.sh"
# shellcheck source=incl/conditions.sh
source "${incl}/conditions.sh"
# shellcheck source=incl/files.sh
source "${incl}/files.sh"
# shellcheck source=incl/output.sh
source "${incl}/output.sh"
# shellcheck source=incl/system.sh
source "${incl}/system.sh"


# -------------------------------------------------------------------------
# SPECIFIC
# -------------------------------------------------------------------------


# -------------------------------------------------------------------------
# MAIN
# -------------------------------------------------------------------------
## Actions
action=validate

## Options
debug=false
verbose=false
user=${USER}

# Parse command-line options
while [[ $# -gt 0 ]]; do
    if test "$1" == "--help"; then
        action=help
    elif test "$1" == "--version"; then
        action=version
    elif test "$1" == "--debug"; then
        debug=true
    elif test "$1" == "--verbose"; then
        verbose=true
	
    ## Deprecated
    elif test "$1" == "--user"; then
	shift
        user=$1
	mdeprecated "Command-line option format '$1 <value>' is deprecated. Please use '$1=<value>' instead"
	
    ## Options (--key=value):
    elif [[ "$1" =~ ^--.*=.*$ ]]; then
        key=${1//--}
        key=${key//=*}
        value=${1//--[[:alpha:]]*=}
        mdebug "Key-value option '$1' parsed to key='${key}', value='${value}'"
        if [[ -z ${value} ]]; then
            error "Option '--${key}' must not be empty"
        fi
        if [[ "${key}" == "user" ]]; then
            user=${value}
        else
            error "Unknown option: $1"
        fi
     else
        extras="$extras $1"
    fi
    shift
done

## Assert that user exists
id --user "$user" &> /dev/null || error "No such user: $user"


if [[ $user == "$USER" ]]; then
    home=$HOME
else
    home=$(getent passwd "$user" | cut -d: -f6)
fi

uid=$(id --user "$user")
gid=$(id --group "$user")
group=$(id --group --name "$user")

if $debug; then
    mdebug "call: $call"
    mdebug "action: $action"
    mdebug "verbose: $verbose"
    mdebug "user: $user"
    mdebug "group: $group"
    mdebug "uid: $uid"
    mdebug "gid: $gid"
    mdebug "home: $home"
fi

if [[ $action == "version" ]]; then
    version
    exit 0
elif [[ $action == "help" ]]; then
    help ""
    exit 0
fi

if [[ $action == "validate" ]]; then
    echo "# Account Validation"
    echo
    echo "* User : $user (uid=$uid)"
    echo "* Group: $group (gid=$gid)"
    echo "* HOME: $home"
    
    if [[ -d "${home}" ]]; then
	echo "[ OK ] HOME folder exist"
    else
	echo "[FAIL] HOME folder does not exist"
    fi			    
    if [[ $(stat --format="%u" "${home}") == "${uid}" ]]; then
	echo "[ OK ] HOME folder owned by user"
    else
	echo "[FAIL] HOME folder not owned by user"
    fi			    
fi

